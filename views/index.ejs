<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include("./parts/betahead.ejs") %>
    
  </head>
  <body class="loading-body" id="body">
    <div class="loading" id="loading">
      <img class="loading-svg" src="https://cdn.glitch.com/8d554e23-44aa-49a6-8cbc-b5907d9296e9%2Fundraw_building_websites_i78t.svg?v=1629368423963" alt="loading...">
      <span class="loading-title">Loading...</span>
    </div>
    
    <main class="main">
<!--     navbar -->
      <div class="pf-navbar">
         <div class="pf-img-stats">
           <img class="pf-img freezeframe" alt="avatar" src="<%= req.session.user.Avatar %>" onerror="this.src='https://i.stack.imgur.com/l60Hf.png'">
           <span class="pf-status online"></span>
        </div>
        <span class="pf-username"><%= req.session.user.Username %></span>
      <div class="share-section">
        <i class="fa fa-share" title="share to your friend" style="cursor: pointer;" onclick="shareURL()"></i>
      </div>
      </div>
<!--     navbar end -->
      <div class="contacts">
<!--          -->
    <% if (!contacts[0]) { %>
    <h3 class="no-contact">
      no user available
    </h1>
    <% } else { %>
    <% contacts.sort((a,b) => a.num - b.num).map(u => { %>
        <div class="contact" onclick="location.href='/me/<%= u.uid %>'">
         <div class="pf-img-stats pf-2">
           <img class="pf-img pf-2 freezeframe" alt="avatar" src="<%= u.avatar %>" onerror="this.src='https://i.stack.imgur.com/l60Hf.png'">
           <span class="pf-status pf-2 <%= u.bot ? "online" : "offline" %>" id="<%= u.bot ? "" : `${u.uid}` %>"></span>
        </div>
          <div class="pf-username-lastmsg">
        <span class="pf-username pf-2"><%= u.username %></span>
            <span maxlength="100" class="pf-lastmsg pf-2" id="<%= u.uid %>-lastmsg"><%= u.messages.List[u.messages.List.length - 1] ? u.messages.List[u.messages.List.length - 1].author.UID == req.session.user.UID ? `(you): ${u.messages.List[u.messages.List.length - 1].content}` : `(${u.messages.List[u.messages.List.length - 1].author.Username}): ${u.messages.List[u.messages.List.length - 1].content}` : "No messages yet" %></span>
          </div>
        </div>
        <hr style='border-color: black; margin-top: 10px;'>
        
<!--       <div class="account" onclick="location.href = '/chat/<%= u.uid %>'" >
      <img class="account-avatar-2" alt="avatar" src="<%= u.avatar %>">
        <div class="account-username-isonline-2">
          <span class="account-username-2"><%= u.username %></span>
          <span class="account-isonline offline" id="<%= u.uid %>" style="width: -webkit-fill-available; text-align: left; margin-left: 12px;"><i class="fa fa-times"></i> offline</span>
        </div>
      <span class="account-last-msg-2" id="<%= u.uid %>-lastmsg"><%= u.messages.List[u.messages.List.length - 1] ? u.messages.List[u.messages.List.length - 1].author.UID == req.session.user.UID ? `(you): ${u.messages.List[u.messages.List.length - 1].content}` : `(${u.messages.List[u.messages.List.length - 1].author.Username}): ${u.messages.List[u.messages.List.length - 1].content}` : "No messages yet" %></span>
      </div> -->
    <% }) %>
    <% } %>   
<!--          -->
      </div>
      
      <div class="navbot">
        <div class="navbot-link">
          <a href="/me/settings">
          <i class="fa fa-gear" title="settings"></i>
          </a>
        </div>
        <div class="navbot-link">
          <a href="/me/add">
          <i class="fa fa-plus" title="add contact"></i>
          </a>
        </div>
        <div class="navbot-link">
          <a href="/logout">
          <i class="fa fa-sign-out" title="logout"></i>
          </a>
        </div>
      </div>
    </main>
    

    <audio src="https://cdn.glitch.com/8d554e23-44aa-49a6-8cbc-b5907d9296e9%2Farpeggio-467.mp3"></audio>
    
    <script src="https://cdn.socket.io/4.1.2/socket.io.min.js" integrity="sha384-toS6mmwu70G0fw54EGlWWeA4z3dyJ+dlXBtSURSKN4vyRFOcxd3Bzjj/AoOwY+Rg" crossorigin="anonymous"></script>    
    
    <script>
    let isNavbar = false;
      
      function toggleNavbar() {
        let navbar = document.getElementById("navbar");
        
        if (isNavbar) {
          navbar.classList.remove("on");
          isNavbar = false;
        } else if (!isNavbar) {
          navbar.classList.add("on");
          isNavbar = true;
        }
      }
    
    </script>
    <script>
      async function shareURL() {
const shareData = {
  title: 'Add me on Zhatting',
  text: 'Add <%= req.session.user.Username %> on Zhatting',
  url: 'https://zhat.cf/invite/<%= req.session.user.UID %>',
}
  try {
    await navigator.share(shareData)
  } catch(err) {
    console.log("Cant open share pop up", err)
  }    
      }      
      
      window.onload = function() {
        setTimeout(() => {
          document.getElementById('body').classList.remove("loading-body");
          document.getElementById('loading').classList.add("not-showing")
        }, 1000)
      }
    </script>
    <script>
        const audio = document.querySelector("audio");
        audio.volume = 0.3;
      
    let socket = io();
      
      console.log("connected")
      socket.emit("isConnected", '<%= req.session.user.UID %>')
                  
      socket.on("someoneOnline", userId => {
        let user = document.getElementById(userId);
        if (!user) return;
      
        
        user.classList.remove("offline")
        user.classList.add("online")
      })
      
      socket.on("newMessage", (opt) => {
        let user = document.getElementById(`${opt.id}-lastmsg`);
        if (opt.to !== '<%= req.session.user.UID %>') return;
        if (!user) return;
        
        audio.play();
        user.innerHTML = `${opt.id == '<%= req.session.user.UID %>' ? '(you):' : '(new messages):'} ${opt.msg}`;
      })
                  
      socket.on("isOnline", userId => {
        socket.emit("updateOnline", '<%= req.session.user.UID %>')
        let user = document.getElementById(userId);
        if (!user) return;
        console.log(`${userId} is online`)
        
        user.classList.remove("offline")
        user.classList.add("online")
      });
      
      socket.on("isOffline", userId => {
        let user = document.getElementById(userId);
        if (!user) return;
        console.log(`${userId} is offline`)
        
        user.classList.remove("online")
        user.classList.add("offline")      
      })
      
    </script>
  </body>
</html>