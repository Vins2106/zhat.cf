<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include("./parts/betahead.ejs") %>    
  </head>
  <body class="loading-body" id="body">
    <div class="loading" id="loading">
      <img class="loading-svg" src="https://cdn.glitch.com/8d554e23-44aa-49a6-8cbc-b5907d9296e9%2Fundraw_building_websites_i78t.svg?v=1629368423963" alt="loading...">
      <span class="loading-title">Loading...</span>
    </div>
    
    <main class="main">
      <div id="vidcal" class="vidcal">
        <video class="vid" id="vid">
          
        </video>
        <video class="myvid" id="myvid">
          
        </video>
        <div class="settings">
          <ul class="settings-items">
            <li class="set-item"><i class="fa fa-microphone-slash"></i></li>
          </ul>
        </div>
      </div>
    </main> 
    <script src="https://cdn.socket.io/4.1.2/socket.io.min.js" integrity="sha384-toS6mmwu70G0fw54EGlWWeA4z3dyJ+dlXBtSURSKN4vyRFOcxd3Bzjj/AoOwY+Rg" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/peerjs/1.3.2/peerjs.js" integrity="sha512-Us7lczoIk7ihPZfJ7UgbG8jQU/oK7NnpbXisL+t3WSv3GDokuzMOwfMAwIzPMuF3SPfKoJYUw80Y7moQkID+7A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    
    <script>
      let myVid = document.getElementById("myvid");
      myVid.muted = true;
      let ROOM_ID = window.location.href.split("/")[5];
const socket = io()
const videoGrid = document.getElementById('video-grid')
const myPeer = new Peer();
      
navigator.mediaDevices.getUserMedia({
  video: true,
  audio: true
}).then(stream => {
  myVid.srcObject = stream;
  myPeer.on('call', call => {
    call.answer(stream)
    const video = document.getElementById("vid")
    call.on('stream', userVideoStream => {
      addOtherUser(video, userVideoStream)
    })
  })

  socket.on('user-connected', userId => {
    connectToNewUser(userId, stream)
  })  
})
      
myVid.addEventListener('loadedmetadata', () => {
    myVid.play()
  })      
      
//       
  

const peers = {}
socket.on('user-disconnected', userId => {
  if (peers[userId]) peers[userId].close()
})

myPeer.on('open', id => {
  socket.emit('join-room', ROOM_ID, id)
})

function connectToNewUser(userId, stream) {
  const call = myPeer.call(userId, stream)
  const video = document.getElementById("vid")
  call.on('stream', userVideoStream => {
    addOtherUser(video, userVideoStream)
  })
  call.on('close', () => {
    video.remove()
  })

  peers[userId] = call
}

function addOtherUser(video, stream) {
  video.srcObject = stream
  video.addEventListener('loadedmetadata', () => {
    video.play()
  });
}      
    </script>
    <script>
      window.onload = function() {
        setTimeout(() => {
          document.getElementById('body').classList.remove("loading-body");
          document.getElementById('loading').classList.add("not-showing")
        }, 1000)
      }      
    </script>
  </body>
</html>